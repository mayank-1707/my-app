{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","for","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","length","split","defaultProps","about","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAEe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACA,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,aAGd,oBAAIA,UAAU,kBAKlB,sBAAKM,MAAK,sCAA8C,UAAbP,EAAME,KAAe,OAAO,SAAvE,UACE,uBAAOG,KAAK,WAAWE,MAAM,mBAAmBC,QAASR,EAAMS,WAAYH,GAAG,kBAC9E,uBAAOC,MAAM,mBAAmBG,IAAI,gBAApC,sCCpBG,SAASC,EAASX,GAC7B,IAuCA,EAAqBY,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,OACA,qCACA,sBAAKb,UAAU,sBAAsBc,MAAO,CAACC,MAAkB,QAAZhB,EAAME,KAAa,QAAQ,SAA9E,UACI,6BAAKF,EAAMiB,UACP,sBAAKhB,UAAU,aAAf,UACI,uBAAOS,IAAI,gCACX,0BAAUT,UAAU,eAAeiB,MAAOL,EAAMM,SAZvC,SAACC,GAElBC,QAAQC,IAAI,eACZR,EAAQM,EAAMG,OAAOL,QAS6DH,MAAO,CAACS,gBAA6B,SAAbxB,EAAME,KAAc,OAAO,QAAQc,MAAkB,QAAZhB,EAAME,KAAa,QAAQ,SAAUI,GAAG,QAAQmB,KAAK,SAEpM,sBAAKxB,UAAU,mBAAf,UACI,wBAAQA,UAAU,uBAAuBO,QAjDjC,WAEf,IAAIkB,EAAQb,EAAKc,cACjBN,QAAQC,IAAI,cACZR,EAAQY,GACR1B,EAAM4B,UAAU,2BAA2B,YA4CpC,yCACA,wBAAQ3B,UAAU,uBAAuBO,QA3C/B,WAEjB,IAAIkB,EAAQb,EAAKgB,cACjBR,QAAQC,IAAI,cACZR,EAAQY,GACR1B,EAAM4B,UAAU,2BAA2B,YAsCpC,yCACA,wBAAQ3B,UAAU,uBAAuBO,QA1B9B,WAGlBa,QAAQC,IAAI,cACZR,EAFY,IAGZd,EAAM4B,UAAU,eAAe,YAqBxB,wBACA,wBAAQ3B,UAAU,uBAAuBO,QArC/B,WAEjB,IAAIK,EAAKiB,SAASC,eAAe,SACjCV,QAAQC,IAAI,cACXT,EAAKmB,SACLnB,EAAKoB,kBAAkB,EAAE,MACzBC,UAAUC,UAAUC,UAAUvB,EAAKK,OACpClB,EAAM4B,UAAU,2BAA2B,YA8BpC,6BAIZ,sBAAK3B,UAAU,sBAAsBc,MAAO,CAACC,MAAkB,QAAZhB,EAAME,KAAa,QAAQ,SAA9E,UACI,+CACA,8BAAkB,IAAdW,EAAKwB,OAAW,EAAExB,EAAKyB,MAAM,KAAKD,OAAtC,aAAwDxB,EAAKwB,OAA7D,gBACA,8BAAI,KAAQxB,EAAKyB,MAAM,KAAKD,OAA5B,mBACA,0CACA,4BAAIxB,EAAKwB,OAAO,EAAExB,EAAK,0DDlC9Bd,EAAOwC,aAAa,CAACnC,MAAM,WAAWoC,MAAM,aEjB9BC,MAXf,SAAezC,GACX,OACQA,EAAM0C,OAAS,sBAAKzC,UAAS,sBAAiBD,EAAM0C,MAAMrC,KAA7B,gCAAiEsC,KAAK,QAApF,UACX,mCAAS3C,EAAM0C,MAAMrC,KAArB,QAAsCL,EAAM0C,MAAME,QCwDlDC,MAhDhB,WACG,MAAqBjC,mBAAS,SAA9B,mBAAMV,EAAN,KAAY4C,EAAZ,KACA,EAAuBlC,mBAAS,MAAhC,mBAAM8B,EAAN,KAAaK,EAAb,KAEOnB,EAAU,SAACoB,EAAQ3C,GACvB0C,EAAS,CACPH,IAAII,EACJ3C,KAAKA,IAEP4C,YAAW,WACTF,EAAS,QACT,MAmBJ,OACF,qCAEC,cAAChD,EAAD,CAAQG,KAAMA,EAAMO,WAlBF,WAEL,UAAPP,IAEC4C,EAAQ,QACRhB,SAASoB,KAAKnC,MAAMS,gBAAgB,WACpCI,EAAU,4BAA4B,YAE9B,SAAP1B,IAED4C,EAAQ,SACRhB,SAASoB,KAAKnC,MAAMS,gBAAgB,QACpCI,EAAU,6BAA6B,eAO9C,cAAC,EAAD,CAAOc,MAAOA,IAMP,cAAC/B,EAAD,CAAWiB,UAAWA,EAAW1B,KAAMA,EAAMe,QAAQ,yCCzChDkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BoB,K","file":"static/js/main.4baac8ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                 {/* <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>  */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                 {/* <a className=\"nav-a active\" href=\"/About\">{props.about} </a> */}\r\n              </li>\r\n              </ul>\r\n          </div>\r\n          <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input type=\"checkbox\" class=\"form-check-input\" onClick={props.toggleMode} id=\"customSwitch1\"/>\r\n            <label class=\"form-check-label\" for=\"customSwitch1\">Enable dark Mode</label>\r\n          </div>\r\n         \r\n        </div>\r\n    </nav>\r\n)\r\n}\r\nNavbar.propTypes={title:PropTypes.string,about:PropTypes.string}\r\n Navbar.defaultProps={title:'TextUity',about:'About Us '}","//import React from 'react'\r\nimport React, { useState } from 'react';\r\nexport default function TextForm(props) {\r\n    const handleUpclick=()=>\r\n    {\r\n         let newText=text.toUpperCase();\r\n         console.log(\"on click  \");\r\n         setText(newText)\r\n         props.showAlert(\"Converted into Uppercase\",\"success\");    \r\n    }\r\n    const handleDownclick=()=>\r\n    {\r\n         let newText=text.toLowerCase();\r\n         console.log(\"on click  \");\r\n         setText(newText)\r\n         props.showAlert(\"Converted into Lowercase\",\"success\");    \r\n       \r\n    }\r\n    const handleCopyclick=()=>\r\n    {\r\n         var text=document.getElementById(\"myBox\");\r\n         console.log(\"on click  \");\r\n          text.select();\r\n          text.setSelectionRange(0,9999);\r\n          navigator.clipboard.writeText(text.value);  \r\n         props.showAlert(\"Converted into Lowercase\",\"success\");    \r\n       \r\n        }\r\n    const handleClearclick=()=>\r\n    {\r\n         let newText=\"\";\r\n         console.log(\"on click  \");\r\n         setText(newText)\r\n         props.showAlert(\"Cleared Text\",\"success\");    \r\n   \r\n        }\r\n    \r\n    const handleonChange=(event)=>\r\n    {\r\n        console.log(\"on change  \");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('');    \r\n    return (\r\n    <>\r\n    <div className=\"container mt-5 my-3\" style={{color:props.mode=='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleFormControlTextarea1\"></label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleonChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode=='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <div className=\"text-center mt-5\">\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleUpclick}>Convert Text into UpperCase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleDownclick}>Convert Text into LowerCase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClearclick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleCopyclick}>Copy Text</button>\r\n               \r\n            </div>\r\n    </div>\r\n    <div className=\"container mt-5 my-3\" style={{color:props.mode=='dark'?'white':'black'}}>\r\n        <h2>Text Summary </h2> \r\n        <p>{text.length===0?0:text.split(\" \").length} word and {text.length} Character</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h1>Preview </h1> \r\n        <p>{text.length>0?text:\"Enter something in above box to preview it here\"}</p>\r\n    </div>    \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}: </strong>{props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"> */}\r\n                {/* </button> */}\r\n            </div>           \r\n        \r\n         )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport React, { useState } from 'react';\n// import {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n   const[mode ,setMode]=useState('light');\n   const[alert ,setAlert]=useState(null);\n    \n    const showAlert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type:type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },1000);\n\n    }\n\n    const toggleMode=()=>\n    {\n      if(mode==='light')\n        {\n          setMode('dark');\n          document.body.style.backgroundColor='#101540 ';\n          showAlert(\"Dark mode has been enable\",\"success\");\n        }\n        if(mode==='dark')\n        {\n          setMode('light');\n          document.body.style.backgroundColor='white';\n          showAlert(\"Light mode has been enable\",\"success\");\n        }\n    }\n    return (\n  <>\n    {/* <Router>  */}\n   <Navbar mode={mode} toggleMode={toggleMode} /> \n   <Alert alert={alert}/> \n     {/* <Switch>  */}\n           {/* <Route path=\"/about\">  */}\n             {/* <About />  */}\n           {/* </Route>  */}\n   {/* /        <Route path=\"/\">  */}\n          <TextForm  showAlert={showAlert} mode={mode} heading=\"Enter the text to Analyze below \"/>\n           {/* </Route>  */}\n         {/* </Switch>  */}\n   {/* </Router>  */}\n     </> \n);\n\n}\nexport default  App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}